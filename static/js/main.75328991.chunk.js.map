{"version":3,"sources":["core/Game.ts","core/ConfigContext.tsx","component/Field.tsx","component/SettingsPanel.tsx","component/StartPage/StartPage.tsx","App.tsx","index.tsx"],"names":["Direction","Game","_startPosition","_finishPosition","_path","_currentStep","COUNT_FIELDS","COUNT_STEPS","_parts","splitNumber","number","row","Math","floor","column","generate","currentPosition","refillPart","i","fillPart","step","getStep","UP","DOWN","RIGHT","push","position","random","randomInt","max","find","item","direction","LEFT","top","bottom","left","right","x","lastNumber","ceil","start","next","this","ConfigContext","React","createContext","ProviderConfigContext","children","useState","setCOUNT_FIELDS","setCOUNT_STEPS","FIELD_SIZE","useMemo","minWindowSize","window","innerWidth","innerHeight","value","Provider","useConfigContext","useContext","Field","styled","div","props","color","MapFieldsComponent","MapFields","MapDirectionComponent","MapDirection","ItemInnerFieldComponent","ItemInnerField","grip","FieldMap","FieldDirection","Panel","show","Toggle","Button","button","Input","input","SettingsPanel","win","count","restart","setShow","countFields","setCountFields","countSteps","setCountSteps","type","onChange","e","target","min","onClick","StatusGame","Title","h1","Main","Icon","StartPage","game","steps","setSteps","enabledField","setEnabledField","UNDEFINED","statusGame","setStatusGame","selectNumber","setSelectNumber","showPanel","setShowPanel","setWin","games","setGames","useEffect","setTimeout","getNextStep","handleFinish","finish","WIN","LOSE","Array","fill","map","index","startPosition","RefSource","a","App","setStart","className","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75328991.chunk.js","sourcesContent":["import randomInt from 'random-int';\n\nexport const STEP_SIZE = 30;\n\nexport enum Direction {\n  UP,\n  DOWN,\n  LEFT,\n  RIGHT,\n}\n\ninterface IPart {\n  direction: Direction;\n  max: number;\n}\nexport class Game {\n  private _startPosition: number = 0;\n  private _finishPosition: number = -1;\n  private _path: Direction[] = [];\n  private _currentStep: number = 0;\n  private COUNT_FIELDS: number = 3;\n  private COUNT_STEPS: number = 10;\n\n  private _parts: IPart[];\n\n  constructor() {\n    this._parts = [\n      {\n        direction: Direction.UP,\n        max: 0,\n      },\n\n      {\n        direction: Direction.DOWN,\n        max: 0,\n      },\n\n      {\n        direction: Direction.LEFT,\n        max: 0,\n      },\n\n      {\n        direction: Direction.RIGHT,\n        max: 0,\n      },\n    ];\n    this.start(this.COUNT_FIELDS, this.COUNT_STEPS);\n  }\n\n  private splitNumber = (number: number) => {\n    const row = Math.floor(number / this.COUNT_FIELDS);\n    const column = number % this.COUNT_FIELDS;\n    return {\n      row,\n      column,\n    };\n  };\n\n  private generate = () => {\n    const currentPosition = this.splitNumber(this._startPosition);\n    const refillPart = Math.floor(this.COUNT_STEPS / 2);\n    for (let i = 0; i < this.COUNT_STEPS; i++) {\n      if (i % refillPart === 0)\n        this.fillPart(currentPosition.row, currentPosition.column);\n\n      const step = this.getStep(currentPosition);\n\n      if (step === Direction.UP) currentPosition.row--;\n      else if (step === Direction.DOWN) currentPosition.row++;\n      else if (step === Direction.RIGHT) currentPosition.column++;\n      else currentPosition.column--;\n\n      this._path.push(step);\n    }\n\n    this._finishPosition =\n      currentPosition.row * this.COUNT_FIELDS + currentPosition.column;\n  };\n\n  private getStep = (position: { column: number; row: number }) => {\n    const random = randomInt(0, this._parts[3].max);\n    const step = this._parts.find(item => random <= item.max)!.direction;\n\n    if (step === Direction.UP) {\n      return position.row - 1 < 0 ? Direction.DOWN : Direction.UP;\n    } else if (step === Direction.DOWN) {\n      return position.row + 1 >= this.COUNT_FIELDS\n        ? Direction.UP\n        : Direction.DOWN;\n    } else if (step === Direction.LEFT) {\n      return position.column - 1 < 0 ? Direction.RIGHT : Direction.LEFT;\n    } else {\n      return position.column + 1 >= this.COUNT_FIELDS\n        ? Direction.LEFT\n        : Direction.RIGHT;\n    }\n  };\n\n  private fillPart = (row: number, column: number) => {\n    const top = row;\n    const bottom = this.COUNT_FIELDS - row - 1;\n\n    const left = column;\n    const right = this.COUNT_FIELDS - column - 1;\n\n    const x = (this.COUNT_FIELDS - 1) * 2;\n\n    let lastNumber = Math.ceil((top * 100) / x);\n    this._parts[0].max = lastNumber;\n\n    lastNumber += Math.ceil((bottom * 100) / x);\n    this._parts[1].max = lastNumber;\n\n    lastNumber += Math.ceil((left * 100) / x);\n    this._parts[2].max = lastNumber;\n\n    lastNumber += Math.ceil((right * 100) / x);\n    this._parts[3].max = lastNumber;\n  };\n\n  start = (COUNT_FIELDS: number, COUNT_STEPS: number) => {\n    this.COUNT_FIELDS = COUNT_FIELDS;\n    this.COUNT_STEPS = COUNT_STEPS;\n\n    this._finishPosition = -1;\n    this._path = [];\n    this._currentStep = 0;\n    this._startPosition = randomInt(\n      0,\n      this.COUNT_FIELDS * this.COUNT_FIELDS - 1,\n    );\n    this.generate();\n  };\n\n  get finish() {\n    return this._finishPosition;\n  }\n\n  get startPosition() {\n    return this._startPosition;\n  }\n\n  next = () => {\n    if (this._currentStep === this.COUNT_STEPS) return null;\n    return this._path[this._currentStep++];\n  };\n}\n","import React, { useContext, useMemo, useState } from 'react';\n\nexport const ConfigContext = React.createContext({\n  COUNT_STEPS: 10,\n  COUNT_FIELDS: 3,\n});\n\nexport const ProviderConfigContext = ({ children }: any) => {\n  const [COUNT_FIELDS, setCOUNT_FIELDS] = useState(3);\n  const [COUNT_STEPS, setCOUNT_STEPS] = useState(10);\n\n  const FIELD_SIZE = useMemo(() => {\n    const minWindowSize =\n      window.innerWidth < window.innerHeight\n        ? window.innerWidth\n        : window.innerHeight;\n\n    if (minWindowSize > 600) return (minWindowSize - 360) / COUNT_FIELDS;\n    else return minWindowSize / COUNT_FIELDS;\n  }, [COUNT_FIELDS]);\n\n  const value = useMemo(\n    () => ({\n      COUNT_FIELDS,\n      setCOUNT_FIELDS,\n      COUNT_STEPS,\n      setCOUNT_STEPS,\n      FIELD_SIZE,\n    }),\n    [COUNT_STEPS, COUNT_FIELDS],\n  );\n\n  return (\n    <ConfigContext.Provider value={value}>{children}</ConfigContext.Provider>\n  );\n};\n\nexport const useConfigContext = () => {\n  const {\n    COUNT_FIELDS,\n    setCOUNT_FIELDS,\n    COUNT_STEPS,\n    setCOUNT_STEPS,\n    FIELD_SIZE,\n  }: any = useContext(ConfigContext);\n\n  const splitNumber = (number: number) => {\n    const row = Math.floor(number / COUNT_FIELDS);\n    const column = number % COUNT_FIELDS;\n    return {\n      row,\n      column,\n    };\n  };\n\n  return {\n    COUNT_FIELDS,\n    setCOUNT_FIELDS,\n    COUNT_STEPS,\n    setCOUNT_STEPS,\n    FIELD_SIZE,\n    splitNumber,\n  };\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { STEP_SIZE } from '../core/Game';\nimport { useConfigContext } from '../core/ConfigContext';\n\nconst Field = styled.div`\n  border-radius: 5px;\n  background-color: ${props => props.color};\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nconst MapFieldsComponent: any = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: repeat(\n    ${(props: any) => props.COUNT_FIELDS},\n    ${(props: any) => props.FIELD_SIZE}px\n  );\n  grid-template-rows: repeat(\n    ${(props: any) => props.COUNT_FIELDS},\n    ${(props: any) => props.FIELD_SIZE}px\n  );\n  grid-gap: ${(props: any) => 24 / props.COUNT_FIELDS}px;\n  margin-bottom: 16px;\n`;\n\nexport const MapFields = (props: any) => {\n  const { COUNT_FIELDS, FIELD_SIZE } = useConfigContext();\n\n  return <MapFieldsComponent {...{ COUNT_FIELDS, FIELD_SIZE }} {...props} />;\n};\n\nconst MapDirectionComponent: any = styled.div`\n  display: grid;\n  grid-template-columns: repeat(\n    ${(props: any) => props.COUNT_STEPS / 2},\n    ${STEP_SIZE}px\n  );\n  grid-template-rows: repeat(2, ${STEP_SIZE}px);\n  grid-gap: ${(props: any) => 48 / props.COUNT_STEPS}px;\n`;\n\nexport const MapDirection = (props: any) => {\n  const { COUNT_STEPS } = useConfigContext();\n  return <MapDirectionComponent {...{ COUNT_STEPS }} {...props} />;\n};\n\nconst ItemInnerFieldComponent: any = styled(Field)`\n  position: absolute;\n  margin: 0;\n  width: ${(props: any) => props.FIELD_SIZE}px;\n  height: ${(props: any) => props.FIELD_SIZE}px;\n  left: ${({ left }: any) => left}px;\n  top: ${({ top }: any) => top}px;\n  svg {\n    height: ${(props: any) => props.FIELD_SIZE / 2}px;\n    width: ${(props: any) => props.FIELD_SIZE / 2}px;\n  }\n`;\n\nexport const ItemInnerField = (props: any) => {\n  const { FIELD_SIZE, splitNumber, COUNT_FIELDS } = useConfigContext();\n  const { row, column } = splitNumber(props.number);\n  const grip = 24 / COUNT_FIELDS;\n  const left = column * FIELD_SIZE + grip * column;\n  const top = row * FIELD_SIZE + grip * row;\n\n  return <ItemInnerFieldComponent {...{ FIELD_SIZE, left, top }} {...props} />;\n};\n\nexport const FieldMap = styled(Field)`\n  border: 1px solid #0000002e;\n`;\nexport const FieldDirection = styled(Field)`\n  border: 1px dashed black;\n  cursor: pointer;\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { IoMdArrowDropleft, IoMdArrowDropright } from 'react-icons/all';\nimport { useConfigContext } from '../core/ConfigContext';\n\nconst Panel: any = styled.div`\n  border: 1px solid black;\n  position: absolute;\n  right: -1px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  transform: translateX(${({ show }: any) => (show ? '0' : '100%')});\n  padding: 8px 16px;\n  transition: transform 300ms;\n`;\n\nconst Toggle = styled.div`\n  position: absolute;\n  width: 20px;\n  height: calc(100% + 2px);\n  background-color: black;\n  top: -1px;\n  left: 0;\n  transform: translateX(-100%);\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  svg {\n    fill: white;\n  }\n`;\n\nconst Button = styled.button`\n  border: 1px solid black;\n  border-radius: 3px;\n  padding: 4px 8px;\n  cursor: pointer;\n`;\n\nconst Input = styled.input`\n  font-size: 1rem;\n  border: 1px solid black;\n  margin-bottom: 8px;\n  padding: 2px 8px;\n`;\n\ninterface ISettingsPanelProps {\n  win: number;\n  count: number;\n  restart: any;\n  show: boolean;\n  setShow: any;\n}\n\nconst SettingsPanel = ({\n  win,\n  count,\n  restart,\n  show,\n  setShow,\n}: ISettingsPanelProps) => {\n  const { COUNT_FIELDS, COUNT_STEPS } = useConfigContext();\n  const [countFields, setCountFields] = useState(COUNT_FIELDS);\n  const [countSteps, setCountSteps] = useState(COUNT_STEPS);\n\n  const handleChangeCountFields = (e: any) => {\n    const value = +e.target.value;\n    if (value >= 3 && value <= 18) setCountFields(value);\n  };\n\n  const handleChangeCountSteps = (e: any) => {\n    const value = +e.target.value;\n    if (value >= 10 && value <= 30) setCountSteps(value);\n  };\n\n  return (\n    <Panel show={show}>\n      <p>\n        {win} / {count}\n      </p>\n      <Input\n        type={'number'}\n        value={countFields}\n        onChange={handleChangeCountFields}\n        max={18}\n        min={3}\n      />\n      <Input\n        type={'number'}\n        step={2}\n        value={countSteps}\n        onChange={handleChangeCountSteps}\n        min={10}\n        max={30}\n      />\n      <Button onClick={() => restart(countFields, countSteps)}>Restart</Button>\n      <Toggle onClick={setShow}>\n        {show ? <IoMdArrowDropright /> : <IoMdArrowDropleft />}\n      </Toggle>\n    </Panel>\n  );\n};\n\nexport default SettingsPanel;\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  FaRegArrowAltCircleDown,\n  FaRegArrowAltCircleLeft,\n  FaRegArrowAltCircleRight,\n  FaRegArrowAltCircleUp,\n  FaMapMarkerAlt,\n  FaAward,\n} from 'react-icons/fa';\nimport {\n  FieldDirection,\n  FieldMap,\n  ItemInnerField,\n  MapDirection,\n  MapFields,\n} from '../Field';\nimport { Direction, Game } from '../../core/Game';\nimport { AiFillDislike, AiFillLike } from 'react-icons/all';\nimport SettingsPanel from '../SettingsPanel';\nimport { useConfigContext } from '../../core/ConfigContext';\n\nconst Title = styled.h1`\n  color: black;\n  text-align: center;\n  padding: 0 16px;\n  align-self: center;\n`;\n\nconst Main = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nenum StatusGame {\n  WIN,\n  LOSE,\n  UNDEFINED,\n}\n\nconst Icon = (props: any) => {\n  const { direction } = props;\n  if (direction === Direction.UP) {\n    return <FaRegArrowAltCircleUp />;\n  } else if (direction === Direction.DOWN) return <FaRegArrowAltCircleDown />;\n  else if (direction === Direction.LEFT) return <FaRegArrowAltCircleLeft />;\n  else return <FaRegArrowAltCircleRight />;\n};\n\nconst StartPage = () => {\n  const { COUNT_FIELDS, setCOUNT_FIELDS, setCOUNT_STEPS } = useConfigContext();\n  const game = useMemo(() => new Game(), []);\n\n  const [steps, setSteps] = useState([] as Direction[]);\n  const [enabledField, setEnabledField] = useState(false);\n  const [statusGame, setStatusGame] = useState(StatusGame.UNDEFINED);\n  const [selectNumber, setSelectNumber] = useState(-1);\n  const [showPanel, setShowPanel] = useState(false);\n  const [win, setWin] = useState(0);\n  const [games, setGames] = useState(0);\n\n  useEffect(() => {\n    const getNextStep = () => {\n      const step = game.next();\n\n      if (step !== null) {\n        steps.push(step);\n        setSteps([...steps]);\n      } else {\n        setEnabledField(true);\n      }\n    };\n    setTimeout(() => getNextStep(), 100);\n  }, [game, steps]);\n\n  const handleFinish = (number: number) => {\n    if (!enabledField || statusGame !== StatusGame.UNDEFINED) return;\n\n    if (game.finish === number) {\n      setStatusGame(StatusGame.WIN);\n      setWin(win => win + 1);\n    } else {\n      setStatusGame(StatusGame.LOSE);\n      setGames(count => count + 1);\n    }\n    setSelectNumber(number);\n    setShowPanel(true);\n  };\n\n  const handleRestart = (countFields: number, countSteps: number) => {\n    if (statusGame === StatusGame.UNDEFINED) return;\n\n    setCOUNT_STEPS(countSteps);\n    setCOUNT_FIELDS(countFields);\n\n    setSteps([]);\n    setStatusGame(StatusGame.UNDEFINED);\n    setEnabledField(false);\n    setSelectNumber(-1);\n    game.start(countFields, countSteps);\n  };\n\n  return (\n    <Main>\n      <Title>Лабиринт</Title>\n      <SettingsPanel\n        win={win}\n        count={games}\n        restart={handleRestart}\n        show={showPanel}\n        setShow={() => setShowPanel(show => !show)}\n      />\n      <MapFields>\n        {Array(COUNT_FIELDS * COUNT_FIELDS)\n          .fill('')\n          .map((item, index) => {\n            return <FieldMap onClick={() => handleFinish(index)} />;\n          })}\n        {statusGame === StatusGame.UNDEFINED && (\n          <ItemInnerField\n            number={game.startPosition}\n            onClick={() => handleFinish(game.startPosition)}\n          >\n            <FaMapMarkerAlt />\n          </ItemInnerField>\n        )}\n        {statusGame === StatusGame.WIN && (\n          <ItemInnerField number={selectNumber}>\n            <FaAward />\n          </ItemInnerField>\n        )}\n        {statusGame === StatusGame.LOSE && (\n          <>\n            <ItemInnerField number={game.finish}>\n              <AiFillLike />\n            </ItemInnerField>\n            <ItemInnerField number={selectNumber}>\n              <AiFillDislike />\n            </ItemInnerField>\n          </>\n        )}\n      </MapFields>\n      <MapDirection>\n        {steps.map((item, index) => {\n          return (\n            <FieldDirection>\n              <Icon direction={item} />\n            </FieldDirection>\n          );\n        })}\n      </MapDirection>\n    </Main>\n  );\n};\n\nexport default StartPage;\n","import React, { useState } from 'react';\nimport StartPage from './component/StartPage/StartPage';\nimport { ProviderConfigContext } from './core/ConfigContext';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  border: 6px solid black;\n  font-size: 3rem;\n  padding: 16px 80px;\n  cursor: pointer;\n  box-shadow: 0.3em 0.3em 0 0 black, inset 0.3em 0.3em 0 0 black;\n  transition: all 300ms;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 0 0 black, inset 6em 3.5em 0 0 black;\n    color: white;\n  }\n`;\n\nconst RefSource: any = styled.a`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  padding: 15px;\n  color: black;\n`;\n\nconst App: React.FC = () => {\n  const [start, setStart] = useState(false);\n\n  return (\n    <ProviderConfigContext>\n      <div className=\"App\">\n        {start ? (\n          <StartPage />\n        ) : (\n          <Button onClick={() => setStart(true)}>Start</Button>\n        )}\n      </div>\n      <RefSource target={'_black'} href={'https://github.com/Kam1Cadzee/maze'}>\n        https://github.com/Kam1Cadzee/maze\n      </RefSource>\n    </ProviderConfigContext>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}